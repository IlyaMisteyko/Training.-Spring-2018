1)Выполнить рефакторинг класса (с целью сокращения повторного кода) в алгоритмах Евклида (рефакторинг возможен только в случае, когда все метод находятся в одном классе!). Интерфейс класса измениться не должен. Проверить работу существующих модульных тестов.
Смотреть тут: https://github.com/IlyaMisteyko/Training.-Spring-2018/tree/master/NET.S.2018.Misteyko.04.05

2)В класс с алгоритмом сортировки не прямоугольной матрицы, принимающим как компаратор интерфейс IComparer<int[]> добавить метод, принимающий как параметр делегат-компаратор, инкапсулирующий логику сравнения строк матрицы. Протестировать работу разработанного метода на примере сортировки матрицы, используя прежние критерии сравнения. Класс реализовать двумя способами, «замкнув» в первом варианте реализацию метода сортировки с делегатом на метод с интерфейсом, во втором – наоборот.
Смотреть тут: https://github.com/IlyaMisteyko/Training.-Spring-2018/tree/master/NET.S.2018.Misteyko.06
